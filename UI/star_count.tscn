[gd_scene load_steps=2 format=3 uid="uid://buxy1ejbko412"]

[sub_resource type="GDScript" id="GDScript_b725a"]
script/source = "extends RichTextLabel

signal stars_increased
signal stars_decreased
signal indicate_insufficiency

enum COLORS {
    NORMAL,
    GREEN,
    RED,
    ORANGE
}

var COLOR_VALUES: Dictionary = {
    COLORS.GREEN: Color(\"359a34\"),
    COLORS.RED: Color(\"ff0023\"),
    COLORS.ORANGE: Color(\"ff5f00\")
}

const SCALE_UP_VALUE: float = 0.2
const SCALE_ANIM_TIME: float = 0.4

var last_star_count: float

@onready var star_image: Texture = preload(\"res://Collectables/star.svg\")

func _ready() -> void:
    last_star_count = DataManager.gameplay.total_stars

    COLOR_VALUES[COLORS.NORMAL] = self.get_theme_color(\"default_color\")

    self.indicate_insufficiency.connect(_scale_up.bind(COLOR_VALUES[COLORS.RED]))
    self.stars_increased.connect(_scale_up.bind(COLOR_VALUES[COLORS.GREEN]))
    self.stars_decreased.connect(_scale_up.bind(COLOR_VALUES[COLORS.ORANGE]))

    self.child_entered_tree.connect(_update_star_count)

    StatManager.star_count_changed.connect(_update_star_count)
    _update_star_count()

func _update_star_count(_change_in_stars = 0):
    self.clear()

    self.append_text(\"[center]\")
    self.add_image(star_image, 40, 40)
    self.append_text(str(DataManager.gameplay.total_stars))

    if last_star_count < DataManager.gameplay.total_stars:
        emit_signal(\"stars_increased\")
    elif last_star_count > DataManager.gameplay.total_stars:
        emit_signal(\"stars_decreased\")

    last_star_count = DataManager.gameplay.total_stars


func _scale_up(color_value: Color = COLOR_VALUES[COLORS.NORMAL]):
    self.add_theme_color_override(\"default_color\", color_value)

    var initial_scale: Vector2 = self.scale

    if not self.is_ready():
        await self.ready
    var tween = create_tween().set_parallel(true)
    tween.tween_property(self, \"scale\", Vector2(initial_scale.x + SCALE_UP_VALUE, initial_scale.y + SCALE_UP_VALUE), SCALE_ANIM_TIME/2).set_trans(Tween.TRANS_CUBIC)
    tween.tween_property(self, \"scale\", Vector2(initial_scale.x, initial_scale.y), SCALE_ANIM_TIME/2).set_trans(Tween.TRANS_CUBIC).set_delay(SCALE_ANIM_TIME/2)
    await tween.finished

    self.add_theme_color_override(\"default_color\", COLOR_VALUES[COLORS.NORMAL])
"

[node name="StarCount" type="RichTextLabel"]
offset_right = 351.0
offset_bottom = 51.0
size_flags_horizontal = 3
theme_override_colors/default_color = Color(0.299353, 0.273623, 0.268531, 1)
theme_override_font_sizes/normal_font_size = 42
text = "					Stars"
fit_content = true
scroll_active = false
script = SubResource("GDScript_b725a")
