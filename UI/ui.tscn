[gd_scene load_steps=6 format=3 uid="uid://0ckqin0njvj4"]

[ext_resource type="Texture2D" uid="uid://70ft04lcb4pc" path="res://UI/warning_sign.svg" id="1_y1a50"]

[sub_resource type="GDScript" id="GDScript_ew6qc"]
script/source = "extends Control

const status_messages = {
    \"game_over\": \"Game Over\",
}

@onready var score_label = $CanvasLayer/HBoxContainer/VBoxContainer2/Score
@onready var game_status_label = $CanvasLayer/GameStatus
@onready var warning_sign = $CanvasLayer/Warning

var is_warning_on: bool = false

func _ready() -> void:
    GameManager.game_over.connect(_show_game_status.bind(\"game_over\"))

    UiManager.warning_announced.connect(_flash_warning)
    UiManager.warning_withdrawn.connect(_stop_warning)

func _physics_process(_delta: float) -> void:
    score_label.text = \"{score}\".format({\"score\": StatManager.score_gained})

func _show_game_status(current_status: String) -> void:
    game_status_label.text = status_messages.get(current_status)
    game_status_label.show()

    await get_tree().create_timer(3).timeout

    game_status_label.hide()

func _flash_warning(x_position: float):
    var screen_size = get_viewport_rect().size
    warning_sign.position = Vector2(x_position, (0.1 * screen_size.y))

    is_warning_on = true

    var warning_sign_tween = create_tween()
    warning_sign.show()

    while  is_warning_on:
        await warning_sign_tween.tween_property(warning_sign, \"modulate.a\", 1, 1).finished
        await warning_sign_tween.tween_property(warning_sign, \"modulate.a\", 1, 0).finished

    warning_sign_tween.kill()
    warning_sign.hide()

func _stop_warning():
    is_warning_on = false
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_324iy"]

[sub_resource type="Shader" id="Shader_64uhu"]
code = "/**
* Shadow 2D.
* License: CC0
* https://creativecommons.org/publicdomain/zero/1.0/
*/
shader_type canvas_item;
render_mode blend_mix;

uniform vec2 deform = vec2(2.0, 2.0);
uniform vec2 offset = vec2(0.0, 0.0);
uniform vec4 modulate : source_color;

//uniform vec2 texture_size; //uncomment for GLES2

void fragment() {
	vec2 ps = TEXTURE_PIXEL_SIZE;
	vec2 uv = UV;
	float sizex = float(textureSize(TEXTURE,int(ps.x)).x); //comment for GLES2
	float sizey = float(textureSize(TEXTURE,int(ps.y)).y); //comment for GLES2
	//float sizex = texture_size.x; //uncomment for GLES2
	//float sizey = texture_size.y; //uncomment for GLES2
	uv.y+=offset.y*ps.y;
	uv.x+=offset.x*ps.x;
	float decalx=((uv.y-ps.x*sizex)*deform.x);
	float decaly=((uv.y-ps.y*sizey)*deform.y);
	uv.x += decalx;
	uv.y += decaly;
	vec4 shadow = vec4(modulate.rgb, texture(TEXTURE, uv).a * modulate.a);
	vec4 col = texture(TEXTURE, UV);
	COLOR = mix(shadow, col, col.a);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_sa2l3"]
shader = SubResource("Shader_64uhu")
shader_parameter/deform = Vector2(0, 0)
shader_parameter/offset = Vector2(-50, -40)
shader_parameter/modulate = Color(0, 0, 0, 0.392157)

[node name="UI" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_ew6qc")

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="HBoxContainer" type="HBoxContainer" parent="CanvasLayer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="VBoxContainer2" type="VBoxContainer" parent="CanvasLayer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Score" type="Label" parent="CanvasLayer/HBoxContainer/VBoxContainer2"]
material = SubResource("ShaderMaterial_324iy")
use_parent_material = true
layout_mode = 2
size_flags_vertical = 0
theme_override_font_sizes/font_size = 64
text = "Score"
horizontal_alignment = 1

[node name="VBoxContainer3" type="VBoxContainer" parent="CanvasLayer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="GameStatus" type="Label" parent="CanvasLayer"]
visible = false
material = SubResource("ShaderMaterial_324iy")
use_parent_material = true
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 6
theme_override_font_sizes/font_size = 64
text = "Game Over"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Warning" type="TextureRect" parent="CanvasLayer"]
modulate = Color(1, 1, 1, 0)
material = SubResource("ShaderMaterial_sa2l3")
offset_right = 64.0
offset_bottom = 71.0
texture = ExtResource("1_y1a50")
expand_mode = 2
stretch_mode = 4
